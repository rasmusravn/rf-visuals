name: Build

on: [push, pull_request]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python_version: ['3.13']

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install hatch pre-commit pytest pytest-cov
          hatch env create

      - name: Lint and typecheck
        run: |
          hatch run lint:lint-check

      - name: Run tests with coverage
        run: |
          pytest --cov --cov-report=xml

      - name: Upload results to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          verbose: true
          files: coverage.xml
          slug: rasmusravn/rf-visuals

  release:
    runs-on: ubuntu-latest
    environment: release
    needs: test
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
        contents: write
        id-token: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
    - name: Install dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install hatch pre-commit
    - name: Build
      run: |
        hatch build
    - name: Publish ðŸ“¦ to Test PyPI
      if: startsWith(github.ref, 'refs/heads/main')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        skip_existing: true
        user: __token__
        password: ${{ secrets.TEST_PYPI_SECRECT }}
        packages-dir: dist/
        repository-url: https://test.pypi.org/legacy/
    - name: Publish ðŸ“¦ to PyPI
      if: startsWith(github.ref, 'refs/heads/main')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_SECRECT }}
        packages-dir: dist/
